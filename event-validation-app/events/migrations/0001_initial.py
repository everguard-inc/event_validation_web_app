# Generated by Django 5.0.8 on 2024-08-07 12:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('validation_guide_link', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EventDownloadBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Preparation', 'Preparation'), ('Ready', 'Ready')], max_length=200)),
                ('link', models.CharField(max_length=400)),
                ('requester', models.ForeignKey(help_text='User who requested to download a batch of events', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.project')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('link', models.CharField(max_length=200)),
                ('uid', models.CharField(max_length=200)),
                ('portal_comment', models.CharField(blank=True, max_length=2000, null=True)),
                ('internal_comment', models.CharField(blank=True, max_length=2000, null=True)),
                ('taken_for_annotation', models.BooleanField(default=False, help_text='Events taken for annotation should not be used for model evaluation')),
                ('cam_uid', models.CharField(blank=True, help_text='The camera uid from which the event was captured from', max_length=200, null=True)),
                ('validated', models.BooleanField(default=False)),
                ('portal_status', models.CharField(blank=True, choices=[('TP', 'True Positive'), ('TN', 'True Negative'), ('FP', 'False Positive'), ('FN', 'False Negative')], max_length=200, null=True)),
                ('internal_status', models.CharField(blank=True, choices=[('TP', 'True Positive'), ('TN', 'True Negative'), ('FP', 'False Positive'), ('FN', 'False Negative')], max_length=200, null=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.project')),
                ('major_tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='major_tag_set', to='events.tag')),
                ('minor_tag1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='minor_tag1_set', to='events.tag')),
                ('minor_tag2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='minor_tag2_set', to='events.tag')),
            ],
        ),
    ]
