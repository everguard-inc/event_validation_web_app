x-common-env-variables: &common-env-variables
  DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
  DEBUG: "True"

x-db-config: &db-config
  DB_NAME: ${POSTGRES_DB}
  DB_USER: ${POSTGRES_USER}
  DB_PASSWORD: ${POSTGRES_PASSWORD}
  DB_HOST: ${POSTGRES_HOST}
  DB_PORT: ${POSTGRES_PORT}

services:
  db:
    image: postgres:15
    volumes:
      - events_db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    networks:
      - backend

  web: &web
    build: .
    command: bash -c "exec invoke devStart"
    environment:
      <<: [*common-env-variables, *db-config]
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - backend

  redis:
    image: redis
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - redis-server:/.data:rw
    networks:
      - backend
      - redis-network

  celery-worker:
    <<: *web
    container_name: event-app-celery-worker
    command: celery -A event_validation_app worker --loglevel=info
    environment:
      <<: [*common-env-variables, *db-config]
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
    ports: []
    volumes:
      - .:/code
    networks:
      - redis-network
      - backend
    depends_on:
      - redis
      - db

  celery-beat:
    <<: *web
    container_name: event-app-celery-beat
    command: celery -A event_validation_app beat --loglevel=info
    environment:
      <<: [ *common-env-variables, *db-config ]
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
    ports: []
    volumes:
      - .:/code
    networks:
      - redis-network
      - backend
    depends_on:
      - redis
      - db

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - 8080:8080
    networks:
      - backend

volumes:
  events_db:
  redis-server:

networks:
  backend:
  redis-network:
